koodi pohja, pitää testaa kameralla

from ultralytics import YOLO
import cv2
import math

# start webcam
cap = cv2.VideoCapture(0)
cap.set(3, 640)
cap.set(4, 480)

# model
model = YOLO("yolo-Weights/yolov8n.pt")

# object classes
classNames = ["pohja", "laatikko"]

while True:
    success, img = cap.read()
    results = model(img, stream=True)

    # coordinates
    for r in results:
        boxes = r.boxes

        for box in boxes:
            # bounding box coordinates
            x1, y1, x2, y2 = box.xyxy[0]
            x1, y1, x2, y2 = int(x1), int(y1), int(x2), int(y2)  # convert to int values

            # put bounding box in cam
            cv2.rectangle(img, (x1, y1), (x2, y2), (255, 0, 255), 3)

            # confidence
            confidence = math.ceil((box.conf[0] * 100)) / 100
            print("Confidence --->", confidence)

            # class name
            cls = int(box.cls[0])
            print("Class name -->", classNames[cls])

            # calculate center of the bounding box
            center_x = (x1 + x2) // 2
            center_y = (y1 + y2) // 2

            # print the center coordinates
            print(f"Center of {classNames[cls]}: ({center_x}, {center_y})")

            # draw the center point (circle) on the image
            cv2.circle(img, (center_x, center_y), 5, (0, 255, 0), -1)  # Green dot at the center

            # draw the class name and confidence
            org = (x1, y1 - 10)  # Positioning text above the box
            font = cv2.FONT_HERSHEY_SIMPLEX
            fontScale = 0.5
            color = (255, 0, 0)  # Blue color for text
            thickness = 2
            cv2.putText(img, f"{classNames[cls]} {confidence}", org, font, fontScale, color, thickness)

    # display the result
    cv2.imshow('Webcam', img)

    if cv2.waitKey(1) == ord('q'):  # press 'q' to quit
        break

cap.release()
cv2.destroyAllWindows()
